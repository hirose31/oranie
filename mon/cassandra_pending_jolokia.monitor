#!/bin/perl

use strict;
use warnings;
use Getopt::Long qw(:config posix_default no_ignore_case gnu_compat);
use Parallel::ForkManager;
use JMX::Jmx4Perl;
use JMX::Jmx4Perl::Alias;
use JSON ;
use Data::Dumper;

my $check_value = "PendingTasks";
my $jolokia_port = "8778";
my $threshold = 0;
my $ng_flag = 0;
my @host_list; 
my $timeout = 3;
my $concurrent_process = 20;

GetOptions(
    "t=i" => \$threshold,
    "h=s{,}" => \@host_list
);

if ( scalar($threshold) == 0 ){
    print "Option does not exist\n";
    print "cassandra_pending_jolokia.monitor -t [threshold count ] -h [host list example;10.0.0.1 10.0.0.2]\n";
    exit 1;
}

if ( scalar(@host_list) == 0 ){
    exit 0;
}

my %mbean_attr_hash = (
    "ReadStage"=>"org.apache.cassandra.request:type",
    "RequestResponseStage"=>"org.apache.cassandra.request:type",
    "MutationStage"=>"org.apache.cassandra.request:type",
    "ReadRepairStage"=>"org.apache.cassandra.request:type",
    "ReplicateOnWriteStage"=>"org.apache.cassandra.request:type",
    "GossipStage"=>"org.apache.cassandra.internal:type",
    "AntiEntropyStage"=>"org.apache.cassandra.internal:type",
    "MigrationStage"=>"org.apache.cassandra.internal:type",
    "MemtablePostFlusher"=>"org.apache.cassandra.internal:type",
    "StreamStage"=>"org.apache.cassandra.internal:type",
    "FlushWriter"=>"org.apache.cassandra.internal:type",
    "MiscStage"=>"org.apache.cassandra.internal:type",
    "commitlog_archiver"=>"org.apache.cassandra.internal:type",
#    "AntiEntropySessions"=>"org.apache.cassandra.internal:type",
    "InternalResponseStage"=>"org.apache.cassandra.internal:type",
    "HintedHandoff"=>"org.apache.cassandra.internal:type"
);

sub get_jmx_value{
    my $host = $_[0];
    my $jolokia_port = $_[1];
    my $threshold = $_[2];
    my @host_status;
 
    while (my ($attr, $mbean) = each(%mbean_attr_hash)){
        my $mbean_attr = "$mbean" . "=" . "$attr";
        $SIG{ALRM} = sub { print "CHECK NODE IS timeout $host\n ";};
        alarm($timeout);
        my $agent = new JMX::Jmx4Perl(mode=>"agent", url => "http://$host:$jolokia_port/jolokia");
        my $answer = $agent->get_attribute("$mbean_attr","$check_value");
        if  ( $? != 0 ){
            $ng_flag = 1;
            next;
        }
        alarm 0;
        if ($answer > $threshold){
            print "$host $attr pending threshold over!!$threshold->$answer \n";
            my $host_status = "$attr $answer";
            push(@host_status,$host_status);
            $ng_flag = 1;
        }
    }
    return @host_status;
}

my $pm = Parallel::ForkManager->new($concurrent_process);
$pm->run_on_finish(sub {
    my ($pid, $exit_code, $ident, $exit_signal, $core_dump, $data) = @_;
    my $host = $data->{'host'};
    my $status = $data->{'status'};

    if ( $status != 0 ){
        print "$host is NG pending score is @ng_status_list\n";
        push(@ng_host_list,$host);
    }else{
        print "$host is OK!!\n";
    }

});

foreach my $host(@host_list){
    $pm->start and next;
    my $status = get_jmx_value($host,$jolokia_port,$threshold);
    $pm->finish(0, { 'host' => $host, 'status' => $status});
}
$pm->wait_all_children;

if ($ng_flag == 1){
    exit 1;
}
